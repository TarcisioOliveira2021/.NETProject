@page "/caregardados"

<PageTitle>Teste consumo API</PageTitle>

<h1>Carregar dados siconfi</h1>
<div class="container">
    <form>
        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1">Exercisio</span>
            <input type="text" class="form-control" placeholder="Ano de busca">
         </div>

        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1">Municipio</span>
            <select class="form-select" name="municipios">
                <option selected>Selecionar municipio</option>
                <option value="1">Todos</option>
                <option value="2">Vem do banco</option>
                <option value="3">Vem do banco</option>
                <option value="4">Vem do banco</option>
            </select>
        </div>

        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1">Demonstrativo</span>
            <select class="form-select" name="demonstrativo">
                <option selected>Selecionar demonstrativo</option>
                <option value="1">Todos</option>
                <option value="2">Vem do banco</option>
                <option value="3">Vem do banco</option>
                <option value="4">Vem do banco</option>
            </select>
        </div>

        <div class="input-group mb-3">
            <button type="submit" class="btn btn-outline-primary">Carregar</button>
        </div>
    </form>
    <!--Estilo no doc precisa remover -->
    <style>
        .container{
            padding-top: 4rem;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center; 
        }
        .input-group{
            width: 50% !important;
        }
        .form-select:focus, 
        .form-control:focus{
            border-color: #000000b0; 
            outline: 0;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 1px 1px rgba(0,0,0,.075);
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 1px 1px rgba(0,0,0,.075);
        }

        .btn-outline-primary{
            color: #000000b0 !important;
            border-color: #000000b0 !important;
        } 

        .btn-outline-primary:hover{
            color: #fff !important;
            background-color: #000000b0 !important;
            border-color: #fff !important;  
        }
    
    </style>

</div>

@code {
	    //API LINK: https://apidatalake.tesouro.gov.br/docs/siconfi/#/Anexos/get_anexos_relatorios
 	    //RREO - Request
        public async Task<IAsyncResult> CarregarDadosRREO(int anoExercisio, int codMunicipio, int numeroPeriodo)
        {
            HttpClient client = new HttpClient { BaseAddress = new Uri("https://apidatalake.tesouro.gov.br") };
            var resposta = await client.GetAsync($"/ords/siconfi/tt/rreo?an_exercicio={anoExercisio}&nr_periodo={numeroPeriodo}&co_tipo_demonstrativo=RREO&id_ente={codMunicipio}");
            return View();
        }

        //RREOSimplificado - Request
        public async Task<IAsyncResult> CarregarDadosRREOsimplificado(int anoExercisio, int codMunicipio, string numeroPeriodo)
        {
            HttpClient client = new HttpClient { BaseAddress = new Uri("https://apidatalake.tesouro.gov.br") };
            var resposta = await client.GetAsync($"/ords/siconfi/tt/rreo?an_exercicio={anoExercisio}&nr_periodo={numeroPeriodo}&co_tipo_demonstrativo=RREO%20Simplificado&id_ente={codMunicipio}");
            return View();
        }

        //RGF - Request
        ///ords/siconfi/tt/rgf? an_exercicio = 2021 & in_periodicidade = Q & nr_periodo = 1 & co_tipo_demonstrativo = RGF & co_poder = E & id_ente = 1718659
        public async Task<IAsyncResult> CarregarDadosRGF(int anoExercisio, int codMunicipio, string codPoder, string tipoPeriodicidade, string numeroPeriodo)
        {
            HttpClient client = new HttpClient { BaseAddress = new Uri("https://apidatalake.tesouro.gov.br") };
            var resposta = await client.GetAsync($"/ords/siconfi/tt/rgf?an_exercicio={anoExercisio}&in_periodicidade={tipoPeriodicidade}&nr_periodo={numeroPeriodo}&co_tipo_demonstrativo=RGF&co_poder={codPoder}&id_ente={codMunicipio}");
            return View();
        }

        //RGFSimplificado - Request
        public async Task<IAsyncResult> CarregarDadosRGFsimplificado(int anoExercisio, int codMunicipio, string codPoder, string tipoPeriodicidade, string numeroPeriodo)
        {
            HttpClient client = new HttpClient { BaseAddress = new Uri("https://apidatalake.tesouro.gov.br") };
            var resposta = await client.GetAsync($"/ords/siconfi/tt/rgf?an_exercicio={anoExercisio}&in_periodicidade={tipoPeriodicidade}&nr_periodo={numeroPeriodo}&co_tipo_demonstrativo=RGF%20Simplificado&co_poder={codPoder}&id_ente={codMunicipio}");
            return View();
        }


        //Vai estar em outro lugar... vai rederizar as informações.
        private IAsyncResult View()
        {
            throw new NotImplementedException();
        }
}